(set-evidence! true)
(define BUG::(-> nat nat))
(define N::nat 6)
(assert (forall (i::(subrange 1 N)) (and (>= (BUG i) 1) (<= (BUG i) N))))
(assert (forall (i::(subrange 1 (- N 1))) (forall (j::(subrange (+ i 1) N)) (/= (BUG i) (BUG j)))))
(assert+ (< (BUG 1) (BUG 2)) 1)
(assert+ (< (BUG 1) (BUG 3)) 1)
(assert+ (< (BUG 1) (BUG 4)) 1)
(assert+ (< (BUG 1) (BUG 5)) 1)
(assert+ (< (BUG 1) (BUG 6)) 1)
(assert+ (< (BUG 2) (BUG 3)) 1)
(assert+ (< (BUG 2) (BUG 4)) 1)
(assert+ (< (BUG 2) (BUG 5)) 1)
(assert+ (< (BUG 2) (BUG 6)) 1)
(assert+ (< (BUG 3) (BUG 5)) 1)
(assert+ (< (BUG 4) (BUG 5)) 1)
(assert+ (< (BUG 6) (BUG 5)) 1)

(assert+ (< (BUG 1) (BUG 2)) 1)
(assert+ (< (BUG 1) (BUG 6)) 1)
(assert+ (< (BUG 2) (BUG 6)) 1)
(assert+ (< (BUG 3) (BUG 6)) 1)
(assert+ (< (BUG 4) (BUG 6)) 1)
(assert+ (< (BUG 5) (BUG 2)) 1)
(assert+ (< (BUG 5) (BUG 6)) 1)

(assert+ (< (BUG 2) (BUG 1)) 1)
(assert+ (< (BUG 2) (BUG 4)) 1)
(assert+ (< (BUG 3) (BUG 1)) 1)
(assert+ (< (BUG 3) (BUG 4)) 1)
(assert+ (< (BUG 5) (BUG 2)) 1)
(assert+ (< (BUG 5) (BUG 3)) 1)
(assert+ (< (BUG 5) (BUG 6)) 1)
(assert+ (< (BUG 6) (BUG 1)) 1)
(assert+ (< (BUG 6) (BUG 4)) 1)

(assert+ (< (BUG 1) (BUG 2)) 1)
(assert+ (< (BUG 1) (BUG 3)) 1)
(assert+ (< (BUG 1) (BUG 6)) 1)
(assert+ (< (BUG 4) (BUG 6)) 1)
(assert+ (< (BUG 5) (BUG 2)) 1)
(assert+ (< (BUG 5) (BUG 3)) 1)
(assert+ (< (BUG 5) (BUG 6)) 1)

(assert+ (< (BUG 2) (BUG 3)) 1)
(assert+ (< (BUG 2) (BUG 4)) 1)
(assert+ (< (BUG 1) (BUG 5)) 1)
(assert+ (< (BUG 3) (BUG 4)) 1)
(assert+ (< (BUG 4) (BUG 5)) 1)


(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 3))(/= (BUG 3) 4))(/= (BUG 4) 5))(/= (BUG 5) 2))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 3))(/= (BUG 3) 4))(/= (BUG 4) 6))(/= (BUG 5) 2))(/= (BUG 6) 5)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 2))(/= (BUG 3) 3))(/= (BUG 4) 4))(/= (BUG 5) 5))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 3))(/= (BUG 3) 5))(/= (BUG 4) 6))(/= (BUG 5) 2))(/= (BUG 6) 4)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 3))(/= (BUG 3) 5))(/= (BUG 4) 4))(/= (BUG 5) 2))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 2) (/= (BUG 2) 3))(/= (BUG 3) 4))(/= (BUG 4) 5))(/= (BUG 5) 1))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 4))(/= (BUG 3) 3))(/= (BUG 4) 5))(/= (BUG 5) 2))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 2))(/= (BUG 3) 4))(/= (BUG 4) 5))(/= (BUG 5) 3))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 2))(/= (BUG 3) 5))(/= (BUG 4) 3))(/= (BUG 5) 4))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 2) (/= (BUG 2) 3))(/= (BUG 3) 4))(/= (BUG 4) 6))(/= (BUG 5) 1))(/= (BUG 6) 5)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 4))(/= (BUG 3) 3))(/= (BUG 4) 6))(/= (BUG 5) 2))(/= (BUG 6) 5)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 4))(/= (BUG 3) 2))(/= (BUG 4) 5))(/= (BUG 5) 3))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 2))(/= (BUG 3) 4))(/= (BUG 4) 6))(/= (BUG 5) 3))(/= (BUG 6) 5)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 3))(/= (BUG 3) 6))(/= (BUG 4) 4))(/= (BUG 5) 2))(/= (BUG 6) 5)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 4))(/= (BUG 3) 5))(/= (BUG 4) 2))(/= (BUG 5) 3))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 2))(/= (BUG 3) 3))(/= (BUG 4) 5))(/= (BUG 5) 4))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 2) (/= (BUG 2) 1))(/= (BUG 3) 3))(/= (BUG 4) 4))(/= (BUG 5) 5))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 3))(/= (BUG 3) 2))(/= (BUG 4) 4))(/= (BUG 5) 5))(/= (BUG 6) 6)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 2))(/= (BUG 3) 3))(/= (BUG 4) 4))(/= (BUG 5) 6))(/= (BUG 6) 5)))

(assert (or (or (or (or (or (/= (BUG 1) 1) (/= (BUG 2) 2))(/= (BUG 3) 6))(/= (BUG 4) 3))(/= (BUG 5) 4))(/= (BUG 6) 5)))
(max-sat)